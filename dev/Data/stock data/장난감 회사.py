import re
import pymysql


text_good = """
제목: "토이케라톱스", 신상품 획기적 반응!
내용: "아이들 사이에서 '토이케라톱스'의 새로운 장난감이 큰 인기를 끌고 있습니다."

제목: "토이케라톱스"와 유명 애니메이션 스튜디오 협업
내용: "주목받는 애니메이션 스튜디오와의 협업 제품이 발표될 예정입니다."

제목: "토이케라톱스", 환경친화적 패키징 도입
내용: "환경을 생각한 지속 가능한 패키징으로 소비자들의 호평을 받고 있습니다."

제목: 국제 장난감 대상에서 "토이케라톱스" 수상!
내용: "회사의 인기 상품이 국제적인 상을 획득하며 명성을 높였습니다."

제목: "토이케라톱스", 글로벌 시장 확장 계획
내용: "다양한 국가로의 수출 계획이 확정되며 긍정적인 반응을 얻고 있습니다."

제목: "토이케라톱스", 아이들을 위한 특별 이벤트 개최
내용: "가족을 위한 특별 이벤트가 큰 관심을 받아 성공적으로 진행되었습니다."

제목: "토이케라톱스", 창조적인 디자인 팀 합류
내용: "세계적으로 유명한 디자이너 팀이 회사에 합류하여 기대를 모으고 있습니다."

제목: "토이케라톱스", 교육적 가치가 높은 제품 출시
내용: "아이들의 창의력을 키워줄 새로운 제품이 소비자들에게 인기를 얻고 있습니다."

제목: "토이케라톱스", 증강 현실(AR) 기술 접목 성공
내용: "장난감에 AR 기술을 도입하여 아이들의 놀이 경험을 혁신하였습니다."

제목: "토이케라톱스", 제품 안전성 인증 획득
내용: "모든 제품이 국제 안전 기준을 만족시켜 부모들의 신뢰를 얻었습니다."

제목: "토이케라톱스", 특허 기술 도입으로 경쟁력 강화
내용: "독특한 기술을 도입해 다른 회사들과 차별화된 제품을 선보였습니다."

제목: "토이케라톱스", 연예인과의 마케팅 협업 성공
내용: "대세 연예인과의 협업 광고가 큰 화제를 모아 성공적으로 마케팅되었습니다."

제목: "토이케라톱스", 스마트 토이 개발 계획 발표
내용: "기술과 놀이의 결합을 통해 새로운 경험을 제공할 예정입니다."

제목: "토이케라톱스", 기부 문화 확산으로 사회적 책임 실천
내용: "판매 수익의 일부를 기부하는 캠페인으로 사회적 호평을 받고 있습니다."

제목: "토이케라톱스", 지속가능한 재료 도입으로 환경 보호
내용: "환경친화적 재료를 사용한 제품으로 소비자들의 지지를 받고 있습니다."

"""
text_bad = """

제목: "토이케라톱스", 신제품 런칭 연기
내용: "기술적 이슈로 인해 예정된 신제품 출시가 연기되었습니다."

제목: "토이케라톱스", 주요 부품 공급 문제 발생
내용: "일부 장난감 부품 공급업체와의 계약 문제로 생산에 차질이 예상됩니다."

제목: "토이케라톱스", 일부 상품 리콜 결정
내용: "안전 문제가 제기된 상품 일부를 리콜하게 되었습니다."

제목: "토이케라톱스", 해외 시장 반응 부진
내용: "신제품이 해외 시장에서의 기대 이하의 판매량을 기록했습니다."

제목: "토이케라톱스", 광고 캠페인 논란 발생
내용: "최근의 광고 캠페인이 일부 소비자들로부터 비판을 받았습니다."

제목: "토이케라톱스", 주요 판매처와의 계약 종료
내용: "일부 대형 유통망과의 계약이 재계약 없이 종료되었습니다."

제목: "토이케라톱스", 라이선싱 계약에 문제 발생
내용: "특정 캐릭터 라이선싱에 관한 계약 문제로 상품 출시가 지연됩니다."

제목: "토이케라톱스", 연말 성수기 판매량 부진
내용: "올해의 연말 성수기 동안 기대 이하의 판매량을 기록했습니다."

제목: "토이케라톱스", 상품 제작 과정에서 환경 이슈 제기
내용: "생산 과정에서의 환경 문제로 인한 비판이 확산되었습니다."

제목: "토이케라톱스", 미국 진출 계획 보류
내용: "시장 조사 결과, 미국 시장 진출을 잠시 연기하기로 결정했습니다."

제목: "토이케라톱스", 고객 서비스 민원 급증
내용: "일부 상품에 대한 민원이 급증하여 대응이 필요해보입니다."

제목: "토이케라톱스", 해외 공장에서의 노동 문제 발생
내용: "생산 공장에서의 노동 조건 문제로 비판을 받고 있습니다."

제목: "토이케라톱스", 경쟁사에 비해 기술력 부족 지적
내용: "장난감 기술 트렌드에 뒤떨어진다는 평가가 나왔습니다."

제목: "토이케라톱스", 온라인 판매 플랫폼과의 협력 어려움
내용: "주요 온라인 쇼핑몰과의 협업에 어려움을 겪고 있습니다."

제목: "토이케라톱스", 신제품 투자 대비 수익률 낮아
내용: "최근 출시한 신제품의 투자 대비 수익률이 낮게 나타났습니다."
"""


pattern = r'제목: (.*?)\s*내용: "(.*?)"'
matches1 = re.findall(pattern, text_good)
matches2 = re.findall(pattern, text_bad)

# 결과 출력 및 저장
news_list_good = []
for match in matches1:
    title, content = match
    news_list_good.append({"title": title, "content": content})

news_list_bad = []
for match in matches2:
    title, content = match
    news_list_bad.append({"title": title, "content": content})


print(news_list_good)

conn = pymysql.connect(
    host="j9a308.p.ssafy.io",
    user="root",
    password="1q2w3e4r1!@",
    db="backend",
    charset="utf8",
)


cur = conn.cursor()

cur.execute("SELECT * FROM stock_data Where stock_no = 1")

# 모든 결과를 가져오기
rows = cur.fetchall()
print(len(rows))
tmp_k = 0
tmp = 1
tmp_no = 0
g = 0
b = 0
tmp_j = 0
time_list = [0, 90, 180, 270]
for z in range(5):
    for k in range(3):
        sql_query = "INSERT INTO stock_news VALUES (%s, %s, %s, 1, %s)"
        print(time_list[k + 1] + tmp_no)
        j = tmp_j + tmp_k
        if rows[time_list[k + 1] + tmp_no][2] > rows[time_list[k] + tmp_no][2]:
            cur.execute(
                sql_query,
                (
                    tmp,
                    news_list_good[g].get("content"),
                    news_list_good[g].get("title"),
                    j,
                ),
            )
            g += 1
        else:
            cur.execute(
                sql_query,
                (
                    tmp,
                    news_list_bad[b].get("content"),
                    news_list_bad[b].get("title"),
                    j,
                ),
            )
            b += 1

        if tmp_j % 360 == 0 and tmp_j != 0:
            tmp_j = 0
            tmp_k += 1440
        else:
            tmp_j += 180
        tmp += 1

    tmp_no += 270

# 임시저장된 데이터 커밋
conn.commit()

# 연결 종료
conn.close()
